When would you want to use a remote repository rather than keeping all your work
local?

    I would use a remote repository when there needs to be access to a related set of 
    project files across a number of different computers. Examples are: if I'm working 
    with collaborators, if I'm working across different systems (a back-end server and a 
    different front-end client), projects that must work on different client operating 
    systems, or projects where I work on different computers at different times (at 
    home, at work, on the road). Storing my repository "in the cloud" can also be a way
    of assuring a secure and functionally consistent backup (made at a commit boundary), 
    in case my computer is damaged or lost.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Only I know how my remote repository is being used and what I expect to find there. 
    If it's a group project, I don't know what changes someone else may make, and how 
    they'll affect my work. I want my local copy of the code to stay stable until I 
    reach a point where I am ready to merge others' work in. If I'm working on my own, 
    the best way to move changes depends on what I'm doing. Different projects have 
    different operating needs. Only the developer(s) will know what's needed, so a 
    generic automatic  push would be a bad idea.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Fill in your answer here

What is the benefit of having a copy of the last known state of the remote
stored locally?

    Fill in your answer here

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Fill in your answer here

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
